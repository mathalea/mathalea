fenetreMathalea2d = [-3.6,-10.1,26.4,9.9]
context.anglePerspective=30 // angle de la direction de fuite
context.coeffPerspective=0.5 // coefficient de réduction des longueurs fuyantes
// on définit les points par leur coordonnées cartésiennes
let A=point3d(1,0,0),O=point3d(0,0,0),I=point3d(1,0,0)
let J=point3d(0,1,0),K=point3d(0,0,1),B=point3d(4,0,0)
let C=point3d(1,6,0),D=point3d(1,0,2)
// on dessine les axes passant par les points projetés
let d1=demiDroite(O.c2d,I.c2d) // I.c2d est le projeté de I dans le plan 2d
let d2=demiDroite(O.c2d,J.c2d)
d2.pointilles=3
let d3=demiDroite(O.c2d,K.c2d) // demiDroite() est une fonction 2d
C.visible=false // C sera un point caché... les arêtes dont il est une extrémité seront donc en pointillés
// le pavé définit par A et les trois points liés à lui.
let Pav=pave3d(A,B,D,C).c2d

let centreS=point3d(13,4,5) // le centre de la sphère
let r=2 // le rayon de la sphère
// la sphère avec 7 parallèles et 10 méridiens
let S=sphere3d(centreS,2,'red','blue',7,'gray',10) 

let rayon=vecteur3d(2,0,0) // un vecteur pour définir le rayon de la base du cône
let centreC=point3d(8,4,0) // le centre de la base du cône
let sommet=point3d(8,4,5) // le sommet du cône
let solide=cone3d(centreC,sommet,rayon).c2d